{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,iBACrB,gCACE,6BAAKF,IACL,4BAAIC,WCcKK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKGC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACD,qBAAKV,UAAU,MAAf,SACE,uBACDA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCGI,EARA,SAACC,GACf,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACEJ,EAAMK,YCiBIC,E,kDAnBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG3B,WACC,OAAGG,KAAKJ,MAAMC,SACN,2DAEDG,KAAKX,MAAMK,a,GAhBOQ,aC8CZC,G,wDAxCZ,aAAe,IAAD,8BACf,gBAaCC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb7C,EAAKX,MAAQ,CACXlB,OAAQ,GACRK,YAAa,IAJA,E,qDAQhB,WAAqB,IAAD,OACnByB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAOvC,WACE,MAAgCZ,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACV8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACrC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAErD,OAAQtC,EAAOwC,OAGhB,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBACjC,cAAC,EAAD,UACE,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,OAAQmC,WAPnB,6C,GAzBaX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACN,cAAC,EAAD,IACEC,SAASC,eAAe,SAM7BX,M","file":"static/js/main.743028f7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t  <img alt='robots' src={`https://robohash.org/${id}?200Ã—200`} />\r\n\t\t  <div>\r\n\t\t    <h2>{name}</h2>\r\n\t\t    <p>{email}</p>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\treturn (\r\n\t\t<div>\r\n  \t\t  {\r\n\t\t\trobots.map((user, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\t  key={i} \r\n\t\t\t\t\t  id={robots[i].id} \r\n\t\t\t\t\t  name={robots[i].name} \r\n\t\t\t\t\t  email={robots[i].email}\r\n\t\t\t\t\t  />\r\n\t\t\t\t);\r\n\t\t\t})\r\n  \t\t  }\r\n  \t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n  return (\r\n\t<div className='pa2'>\r\n\t  <input \r\n\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\ttype='search' \r\n\t\tplaceholder='search robots'\r\n\t\tonChange={searchChange}\r\n\t  />\r\n\t</div>\t\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t  <div style={{ overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n\t  \t{props.children}\r\n\t  </div>\r\n\t);\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.state.hasError) {\r\n\t\t\treturn <h1>Oooops. That was not good</h1>\r\n\t\t} \r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n   constructor() {\r\n\t super()\r\n\t this.state = {\r\n\t   robots: [],\r\n\t   searchfield: ''\r\n\t  }\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t  .then(response=> response.json())\r\n\t\t  .then(users=> this.setState({ robots: users }));\t\r\n\t}\r\n   \r\n   onSearchChange = (event) => {\r\n   \t\tthis.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n   render() {\r\n   \t\tconst { robots, searchfield } = this.state;\r\n   \t\tconst filteredRobots = robots.filter(robot =>{\r\n   \t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n   \t})\r\n     return !robots.length ?\r\n     <h1>Loading</h1> :\r\n     (\r\n\t   <div className='tc'>\r\n\t     <h1 className='f1'>RoboFriends</h1>\r\n\t     <SearchBox searchChange={this.onSearchChange}/>\r\n\t\t <Scroll>\r\n\t\t   <ErrorBoundry>\r\n\t\t    <CardList robots={filteredRobots} />\r\n\t\t   </ErrorBoundry> \r\n\t\t </Scroll>\r\n\t   </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n\t\t <App />\n\t\t , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}